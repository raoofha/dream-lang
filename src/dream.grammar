program : form* EOF
expression : Number
           | String
           | Boolean
           | Nil
           | Keyword
           | Symbol
           | Identifier
           | array
           | map
           | expression ( Identifier expression )+
           ;

Boolean : "true" | "false" ;
Nil : "nil" ;
String : "\"" ( [^"\""] | "\\\"" )* "\"" ;

primitiveType : "String"
              | "Array"
              | "Map"
              | "Number"
              | "Boolean"
              | "Int"
              | "Float"
              | "RegExp"
              | "Any"
              | "Keyword"
              | "Symbol"
              ;
indentation : #"  [ ]*"
comment : #"# [^\n]*"
        | #"#![^\n]*"
        ;
multiLineComment : comment
                 | comment ( newline .lastLineIndentationLength
                 ;
Number : #"^
              [-+]?
              ( 0b[01]+                   # binary
              | 0o[0-7]+                  # octal
              | 0x[\da-f]+                # hex
              | \d*\.?\d+ (?:e[+-]?\d+)?  # decimal
              )$"

T : Int
  | Float
  | Number
  | Boolean
  | String
  | Keyword
  | Symbol
  | List
  | Array
  | Map
  | RegExp
  ;

fragment
ArrayItems : T
           | T ( " " T )*
           ;
ArrayOpen
Array : " [ " ArrayItems " ] "
      | BOF "[ " ArrayItems " ] "
      | " [ " ArrayItems " ]" EOF
      | BOF "[ " ArrayItems " ]" EOF
      ;

newline : "\n" ;
